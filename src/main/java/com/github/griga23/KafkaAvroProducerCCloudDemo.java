package com.github.griga23;

import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.Producer;
import org.apache.kafka.clients.producer.ProducerRecord;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;

public class KafkaAvroProducerCCloudDemo {

    public static void main(String[] args) throws IOException {

        if (args.length < 1) {
            throw new IllegalArgumentException(
                    "Please provide: the path to an environment configuration file");
        }

        // initialize Kafka producer
        final Properties props = loadProperties(args[0]);
        final Producer<String, Customer> producer = new KafkaProducer<>(props);
        final String topic = props.getProperty("customer.topic.name");

        // create Customer object
        // Customer object must be already generated by the maven plugin
        Customer customer = Customer.newBuilder()
                .setAge(40)
                .setAutomatedEmail(false)
                .setFirstName("Jan")
                .setLastName("Svoboda")
                .setHeight(195f)
                .setWeight(90f)
                .build();

        // serialize single Kafka ProducerRecord based on the Customer object
        ProducerRecord<String, Customer> producerRecord =
                new ProducerRecord<String, Customer>(topic, customer.getLastName(), customer);
        System.out.println(customer);

        // send ProducerRecord to Kafka Broker in CCloud
        producer.send(producerRecord);

        // close Producer to CCloud
        producer.flush();
        producer.close();

        System.out.println("ProducerRecord sent successfully to Kafka!");
    }

    // load properties from some file
    public static Properties loadProperties(String fileName) throws IOException {
        final Properties envProps = new Properties();
        final FileInputStream input = new FileInputStream(fileName);
        envProps.load(input);
        input.close();

        return envProps;
    }
}
